openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Server internal error
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Input error, request body is incorrect
        '500':
          description: Internal server error
  /tasks/{task_id}:
    patch:
      summary: Update task
      tags:
        - tasks
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      requestBody:
        description: Data for update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input, request body is incorrect
        '404':
          description: Task not found
        '500':
          description: Internal server error
    delete:
      summary: Delete task
      tags:
        - tasks
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '204':
          description: Task deleted successfully (no content)
        '404':
          description: Task not found
        '500':
          description: Internal server error
  /users:
    get:
      summary: get all users
      tags:
        - users
      responses:
        '200':
          description: a list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary:
        create a new user
      tags:
        - users
      requestBody:
        description: User for create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{user_id}:
    patch:
      summary: update user by id
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: no user for update
    delete:
      summary: Delete user by ID
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: user not found




components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: uint
        task:
          type: string
        is_done:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: integer
          format: uint
        email:
          type: string
        password:
          type: string